# sampled from https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images
name: jenkins-inbound-agent-py build and publish

on:
  push:
    branches: [ "master" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4    

    # pin login to a full SHA (v3.4.0 from https://github.com/docker/login-action/releases)
    - name: Log in to the Container registry
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}

    # pin login to a full SHA (v5.7.0 from https://github.com/docker/metadata-action/releases)
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        flavor: |
          latest=true

    # pin login to a full SHA (v6.15.0 from https://github.com/docker/build-push-action/releases)
    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true

    # only keep the last amount of specified images
    - name: Delete container versions
      uses: actions/delete-package-versions@v5
      with:
        delete-only-untagged-versions: 'false'
        min-versions-to-keep: 1
        package-name: ${{ env.IMAGE_NAME }}
        package-type: container