# sampled from https://docs.github.com/en/actions/use-cases-and-examples/publishing-packages/publishing-docker-images
name: jenkins-inbound-agent-py build and publish

on:
  push:
    branches: [ "master" ]
  schedule:
    - cron: '0 5 * * 0'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4    

    - name: Log in to the Container registry
      uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # pin login to a full SHA (v3.4.0 from https://github.com/docker/login-action/releases)
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # pin login to a full SHA (v5.7.0 from https://github.com/docker/metadata-action/releases)
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        flavor: |
          latest=true

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # pin login to a full SHA (v6.15.0 from https://github.com/docker/build-push-action/releases)
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v2
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true

  cleanup-older-images:
    needs: build-and-push-image
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: get repository name to derive package name # GITHUB_REPOISTORY returns "owner/name" and we only want "name" for the package
        run: echo "PACKAGE_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV

      - name: Delete older container images
        uses: actions/delete-package-versions@v5
        with:
          owner: ${{ github.repository_owner }}
          delete-only-untagged-versions: 'false'
          min-versions-to-keep: 10
          package-name: ${{ env.PACKAGE_NAME }}
          package-type: container
          token: ${{ secrets.GHCR_TOKEN }}